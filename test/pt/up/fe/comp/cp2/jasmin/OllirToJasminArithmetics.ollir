import io;

Test {

	.construct Test().V {
		invokespecial(this, "<init>").V;
	}

	.method public static main(args.array.String).V {
        test.Test :=.Test new(Test).Test;
		invokespecial(test.Test,"<init>").V;
	    c.i32 :=.i32 invokevirtual(test.Test, "foo").i32;
	    invokestatic(io, "println", c.i32).V;
		ret.V;
	}

	
	.method public foo().i32 {
		a.i32 :=.i32 1.i32;
		b.i32 :=.i32 2.i32;

		c.i32 :=.i32 a.i32 +.i32 b.i32;

		ret.i32 c.i32;
	}
}